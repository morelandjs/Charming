###############################################
########## DEFAULT PARAMETERS FILE ############
###############################################


# Write Path
path = data/b0            # data write path

# Model Optns           
which_mc_model = 5        # (1) MC-CGC 
                          # (5) MC-Glb            

# Sub-Model Optns                 
sub_model = 2             # CGC-> (7) KLN model model described in
                          # CGC-> (100) rcbk model described in
                          # Glb-> (1) WN entropy deposited at WN positions. 
                          # Glb-> (2) WN entropy deposited (fractionally) amongst 
                          # BC midpoints: Heinz, Qiu and Moreland.

# KLN Sub-Model Optns
lambda = 0.288            # Lambda in the def. of (Qs)^2 which is prop. to (x0/x)^lambda 
Et = 0                    # (0) Output gluon density; (1) Output energy density.
lgX = 0                   # (0) Ignore large-x effects; (1) Include large-x effects.
tmax = 51                 # Used to generate the T_A, T_B double integral lookup table. 
tmax_subdivision = 3      # Its reciprocal gives the step used to generate the T_A, T_B 
                          # double integral lookup table


# Glauber Optns
alpha = 0.14              # Alpha defining WN and BC mixture: (1-alpha)/2*WN + alpha*BC
glb_entropy_width = 0.5   # User specified gaussian width for the deposition of entropy 
                          # in the Glauber model 

# Binary Collision Table
bc_table = 1		  # Toggles the binary collision table (used for heavy quark initial conditions)

# Nucleus Optns
Aproj = 208               # Projectile atomic number
Atarg = 208               # Target atomic number
proj_deformed = 0         # (0) Spherical nucleus; (1) Deformed nucleus (see OverLap.cpp)
targ_deformed = 0         # (0) Spherical nucleus; (1) Deformed nucleus (see OverLap.cpp) 


# Nucleon Optns
shape_of_nucleons = 1     # (1) Disk-like nucleons with width given by sigmaNN 
                          # (2) Gaussian nucleons with width given by sigmaNN
                          # (3) Gaussian nucleons with energy dependent width calc
                          # by Heinz and Moreland (http://arxiv.org/abs/1108.5379)
                          # (4) Gaussian nucleons with user specified width 
                          # (5-9) Gaussian nucleons for other models (future use)
gaussian_lambda = 1.27    # 3-> Parameter for energy dependent gaussian width
gauss_nucl_width = 0.661    # 4-> User specified width for Gaussian nucleons


# Collision Optns
ecm = 2760                # Beam Energy sqrt(s) in GeV
bmin = 0.0                  # Minimum sampled impact parameter
bmax = 0.0                  # Maximum sampled impact parameter
Npmin = 0                 # Minimum participant nucleon cut
Npmax = 1000              # Maximum participant nucleon cut


# Monte Carlo Optns
nev = 1000                # Number of collision events simulated
randomSeed = -1           # If randomSeed < 0 then CPU time is used to seed
backup_number = 2000      # Backs up the averaged profile every "n" events. 0 means 
                          # every step. Use a neg number to turn it off

# Operation Mode Optns
operation = 1             # (1) Generate n transverse density profiles for n events 
                          # (input for event-by-event hydro)
                          # (3) Average n transverse density profiles to maximize 
                          # the specified eccentricity (input for single shot hydro) 
                          # (9) Calculate the eccentricity of each event and store 
                          # the data in a table

# Operation Mode Sub-Optns
finalFactor = 6.9         # 1,3,9-> Scale the final density profile by this factor
average_from_order = 2    # 3-> Generate rotated and averaged profiles for each order 
                          # beginning with this order
average_to_order = 2      # 3-> Generate rotated and averaged profiles for each order 
                                 # ending with this order
ecc_from_order = 2        # 9-> Calculate the eccentricity of the profile for each order 
                                  # beginning with this order
ecc_to_order = 2          # 9-> Calculate the eccentricity of the profile for each order 
                                 # ending with this order


# Print to File Optns
use_sd = 0                # Boolean toggle to print the raw CGC and Glauber output 
                          # (CGC: gluon density; Glb: (1-alpha)/2*WN + alpha*BC) 
use_ed = 1                # Boolean toggle to covert the entropy profile using the 
                          # EOS and print the energy profile (do not use if Et=1)
use_4col = 0              # Boolean toggle to print 4 column format (rap, x, y, data)
use_block = 1             # Boolean toggle to print matrix format (good for matlab)


# Grid Optns
maxx = 13                 # Max grid value along x direction in fm
maxy = 13                 # Max grid value along y direction in fm 
dx = 0.1                  # Step size along x direction in fm
dy = 0.1                  # Step size along y direction in fm
ny = 1                    # Number of rapidity bins (do not set to zero)
ymax = 0                  # Maximum rapidity value (symmetric -ymax to ymax)

# CC fluctions
cc_fluctuation_model = 0  # 0: no fluctuations; 1: constant k; 2: use TA TB to determine n
cc_fluctuation_k = 0.75   # constant k; used when cc_fluctuation_model is set to 1.
